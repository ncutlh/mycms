package com.cms.pojo.cms;

import com.fasterxml.jackson.annotation.JsonIgnore;
import lombok.Data;

import java.util.Date;

/**
 * CmsContent generated by hbm2java
 */

//@Table(name = "cms_content")
@Data
public class CmsContent implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = 1L;
   //@GeneratorColumn(title = "ID")
    private Long id;
   //@GeneratorColumn(title = "站点", condition = true)
//   //@FieldBridge(impl = ShortBridge.class)
//   //@Field(analyze = Analyze.NO)NO
    @JsonIgnore
    private short siteId;
   //@GeneratorColumn(title = "标题", condition = true, like = true, or = true)
//   //@Field(store = Store.COMPRESS)
    private String title;
   //@GeneratorColumn(title = "发布用户", condition = true)
    private long userId;
   //@GeneratorColumn(title = "审核用户", condition = true)
    private Long checkUserId;
   //@GeneratorColumn(title = "分类", condition = true)
//   //@Field(analyze = Analyze.NO, store = Store.YES)
//    @Facet(encoding = FacetEncodingType.STRING)
//   //@FieldBridge(impl = IntegerBridge.class)
    private int categoryId;
   //@GeneratorColumn(title = "模型", condition = true)
//   //@Field(analyze = Analyze.NO, store = Store.YES)
//    @Facet(encoding = FacetEncodingType.STRING)
    private String modelId;
   //@GeneratorColumn(title = "父内容", condition = true)
//   //@Field(analyze = Analyze.NO, store = Store.YES)
    private Long parentId;
   //@GeneratorColumn(title = "是否转载")
    private boolean copied;
   //@GeneratorColumn(title = "作者")
//   //@Field(analyze = Analyze.NO, store = Store.YES)
    private String author;
   //@GeneratorColumn(title = "编辑")
//   //@Field(analyze = Analyze.NO, store = Store.YES)
    private String editor;
   //@GeneratorColumn(title = "外链")
//   //@Field(analyze = Analyze.NO, store = Store.YES)
    private boolean onlyUrl;
   //@GeneratorColumn(title = "有图片列表", condition = true)
//   //@Field(analyze = Analyze.NO, store = Store.YES)
    private boolean hasImages;
   //@GeneratorColumn(title = "有附件列表", condition = true)
   //@Field(analyze = Analyze.NO, store = Store.YES)
    private boolean hasFiles;
   //@GeneratorColumn(title = "有静态化")
    private boolean hasStatic;
   //@GeneratorColumn(title = "地址")
   //@Field(analyze = Analyze.NO, store = Store.YES)
    private String url;
   //@GeneratorColumn(title = "描述")
   //@Field(store = Store.COMPRESS)
    private String description;
   //@GeneratorColumn(title = "标签")
   //@Field(store = Store.YES)
    private String tagIds;
   //@GeneratorColumn(title = "封面")
    private String cover;
   //@GeneratorColumn(title = "子内容数")
    private int childs;
   //@GeneratorColumn(title = "分数", order = true)
    private int scores;
   //@GeneratorColumn(title = "评论数", order = true)
    private int comments;
   //@GeneratorColumn(title = "点击数", order = true)
    private int clicks;
   //@GeneratorColumn(title = "发布日期", condition = true, order = true)
//    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
   //@Field(analyze = Analyze.NO, store = Store.YES)
//    @DateBridge(resolution = Resolution.SECOND)
//    @SortableField
    private Date publishDate;
   //@GeneratorColumn(title = "审核日期", order = true)
    private Date checkDate;
   //@GeneratorColumn(title = "更新日期", order = true)
    private Date updateDate;
   //@GeneratorColumn(title = "创建日期")
    private Date createDate;
   //@GeneratorColumn(title = "排序")
    private int sort;
   //@GeneratorColumn(title = "状态", condition = true)
    private int status;
   //@GeneratorColumn(title = "已删除", condition = true)
    @JsonIgnore
    private boolean disabled;

    public CmsContent() {
    }

    public CmsContent(short siteId, String title, long userId, int categoryId, String modelId, boolean copied, boolean onlyUrl,
            boolean hasImages, boolean hasFiles, boolean hasStatic, int childs, int scores, int comments, int clicks,
            Date publishDate, Date createDate, int sort, int status, boolean disabled) {
        this.siteId = siteId;
        this.title = title;
        this.userId = userId;
        this.categoryId = categoryId;
        this.modelId = modelId;
        this.copied = copied;
        this.onlyUrl = onlyUrl;
        this.hasImages = hasImages;
        this.hasFiles = hasFiles;
        this.hasStatic = hasStatic;
        this.childs = childs;
        this.scores = scores;
        this.comments = comments;
        this.clicks = clicks;
        this.publishDate = publishDate;
        this.createDate = createDate;
        this.sort = sort;
        this.status = status;
        this.disabled = disabled;
    }

    public CmsContent(short siteId, String title, long userId, Long checkUserId, int categoryId, String modelId, Long parentId,
            boolean copied, String author, String editor, boolean onlyUrl, boolean hasImages, boolean hasFiles, boolean hasStatic,
            String url, String description, String tagIds, String cover, int childs, int scores, int comments, int clicks,
            Date publishDate, Date checkDate, Date updateDate, Date createDate, int sort, int status, boolean disabled) {
        this.siteId = siteId;
        this.title = title;
        this.userId = userId;
        this.checkUserId = checkUserId;
        this.categoryId = categoryId;
        this.modelId = modelId;
        this.parentId = parentId;
        this.copied = copied;
        this.author = author;
        this.editor = editor;
        this.onlyUrl = onlyUrl;
        this.hasImages = hasImages;
        this.hasFiles = hasFiles;
        this.hasStatic = hasStatic;
        this.url = url;
        this.description = description;
        this.tagIds = tagIds;
        this.cover = cover;
        this.childs = childs;
        this.scores = scores;
        this.comments = comments;
        this.clicks = clicks;
        this.publishDate = publishDate;
        this.checkDate = checkDate;
        this.updateDate = updateDate;
        this.createDate = createDate;
        this.sort = sort;
        this.status = status;
        this.disabled = disabled;
    }


}
